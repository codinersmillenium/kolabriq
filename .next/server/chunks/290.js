exports.id=290,exports.ids=[290],exports.modules={21209:(a,b,c)=>{Promise.resolve().then(c.t.bind(c,49603,23))},24934:(a,b,c)=>{"use strict";c.d(b,{$:()=>j,r:()=>i});var d=c(60687),e=c(43210),f=c(8730),g=c(24224),h=c(96241);let i=(0,g.F)("inline-flex items-center justify-center gap-1.5 text-xs/4 duration-300 whitespace-nowrap outline-hidden font-medium text-center px-2.5 py-2 rounded-lg disabled:pointer-events-none disabled:opacity-30 transition [&>svg]:size-4 [&>svg]:shrink-0",{variants:{variant:{default:"bg-primary text-white hover:bg-[#2A4DD7]",black:"bg-black text-white hover:bg-[#3C3C3D]",outline:"ring-1 ring-inset ring-primary bg-white shadow-sm text-primary hover:bg-light-theme","outline-black":"ring-1 ring-inset ring-black bg-white shadow-sm text-black hover:bg-gray-200","outline-general":"ring-1 ring-inset ring-gray-300 bg-white shadow-sm text-black hover:bg-gray-200",ghost:"bg-none"},size:{default:"",small:"",large:"py-2 px-3 text-sm",extralarge:"font-semibold [&>svg]:size-[18px] rounded-[10px] text-sm py-[11px] px-3.5"}},defaultVariants:{variant:"default",size:"default"}}),j=e.forwardRef(({className:a,variant:b,size:c,asChild:e=!1,...g},j)=>{let k=e?f.DX:"button";return(0,d.jsx)(k,{className:(0,h.cn)(i({variant:b,size:c,className:a})),ref:j,...g})});j.displayName="Button"},40755:()=>{},40886:(a,b,c)=>{"use strict";c.d(b,{yK:()=>m,ZG:()=>w,YD:()=>t,uw:()=>q,b0:()=>s,D_:()=>n,Cc:()=>r,Jv:()=>u,CI:()=>v});var d=c(9424);let e=({IDL:a})=>{let b=a.Variant({ok:a.Text,err:a.Text}),c=a.Principal,d=a.Variant({sessionExpired:a.Null,logout:a.Null,login:a.Null}),e=a.Variant({admin:a.Null,maintainer:a.Null,developer:a.Null}),f=a.Variant({pro:a.Null,basic:a.Null}),g=a.Variant({authentication:a.Record({loginTime:a.Int,action:d}),updateName:a.Record({newFirst:a.Text,oldFirst:a.Text,newLast:a.Text,oldLast:a.Text}),updateRole:a.Record({oldRole:e,newRole:e}),planUpgrade:a.Record({newPlan:f,oldPlan:f}),registration:a.Null}),h=a.Variant({ui:a.Null,frontend:a.Null,business_analyst:a.Null,backend:a.Null}),i=a.Record({id:c,userName:a.Text,action:g,referrerCode:a.Opt(a.Text),plan_type:f,role:e,tags:a.Vec(h),personalRefCode:a.Text,lastName:a.Text,firstName:a.Text}),j=a.Variant({ok:i,err:a.Text}),k=a.Nat,l=a.Record({id:k,signature:a.Text,data:i,hash:a.Text,nonce:a.Nat,timestamp:a.Int,previousHash:a.Text}),m=a.Variant({ok:a.Vec(l),err:a.Text}),n=a.Record({tags:a.Opt(a.Vec(h)),keyword:a.Opt(a.Text),roles:a.Opt(a.Vec(e))}),o=a.Variant({ok:a.Vec(i),err:a.Null}),p=a.Variant({ok:a.Vec(i),err:a.Text}),q=a.Record({userName:a.Text,referrerCode:a.Opt(a.Text),role:e,tags:a.Vec(h),lastName:a.Text,firstName:a.Text});return a.Service({checkPrincipal:a.Func([],[a.Principal],["query"]),getTeamRefCode:a.Func([],[b],["query"]),getUserDetail:a.Func([a.Principal],[j],["query"]),getUserHistory:a.Func([a.Principal],[m],["query"]),getUserList:a.Func([n],[o],["query"]),getUsersByIds:a.Func([a.Vec(a.Principal)],[p],["query"]),healthCheck:a.Func([],[a.Record({lastBlockHash:a.Text,totalBlocks:a.Nat,chainIntegrity:a.Bool,totalUsers:a.Nat})],["query"]),login:a.Func([],[j],[]),logout:a.Func([],[j],[]),registerUser:a.Func([q],[j],[]),updateRole:a.Func([a.Principal,e],[j],[]),updateUser:a.Func([q],[j],[]),upgradePlan:a.Func([f],[j],[])})},f=({IDL:a})=>{let b=a.Variant({ok:a.Text,err:a.Text}),c=a.Variant({free:a.Null,rewarded:a.Null}),d=a.Variant({ui:a.Null,frontend:a.Null,business_analyst:a.Null,backend:a.Null}),e=a.Record({reward:a.Nat,thumbnail:a.Vec(a.Nat8),projectType:c,desc:a.Text,name:a.Text,tags:a.Vec(d)}),f=a.Nat,g=a.Variant({new:a.Null,review:a.Null,done:a.Null,in_progress:a.Null}),h=a.Variant({metadataUpdate:a.Record({field:a.Text,oldValue:a.Text,newValue:a.Text}),create:a.Null,rewardUpdate:a.Record({to:a.Nat,from:a.Nat}),statusUpdate:a.Record({to:g,from:g})}),i=a.Principal,j=a.Record({id:f,status:g,reward:a.Nat,action:h,thumbnail:a.Vec(a.Nat8),projectType:c,ownerId:i,desc:a.Text,name:a.Text,createdBy:i,tags:a.Vec(d)}),k=a.Variant({ok:j,err:a.Text}),l=a.Record({title:a.Text,endDate:a.Int,startDate:a.Int}),m=a.Nat,n=a.Variant({dateUpdate:a.Record({field:a.Text,oldValue:a.Int,newValue:a.Int}),metadataUpdate:a.Record({field:a.Text,oldValue:a.Text,newValue:a.Text}),create:a.Null}),o=a.Record({id:m,title:a.Text,action:n,endDate:a.Int,createdBy:i,projectId:f,startDate:a.Int}),p=a.Variant({ok:o,err:a.Text}),q=a.Record({status:a.Opt(g),projectType:a.Opt(c),tags:a.Opt(a.Vec(d)),keyword:a.Opt(a.Text)}),r=a.Variant({ok:a.Vec(j),err:a.Null}),s=a.Nat,t=a.Variant({assign:a.Null,unassign:a.Null}),u=a.Record({action:t,assignedBy:i,userId:i,projectId:f}),v=a.Variant({teamAssignment:u,project:j,timeline:o}),w=a.Record({id:s,signature:a.Text,data:v,hash:a.Text,nonce:a.Nat,timestamp:a.Int,previousHash:a.Text}),x=a.Variant({ok:a.Vec(w),err:a.Text}),y=a.Variant({ok:a.Vec(i),err:a.Text}),z=a.Variant({ok:a.Vec(o),err:a.Text}),A=a.Record({endDate:a.Int,project:j,startDate:a.Int}),B=a.Variant({ok:A,err:a.Text});return a.Service({assignProjectTeam:a.Func([a.Text,a.Nat,a.Vec(a.Principal)],[b],[]),createProject:a.Func([a.Text,e],[k],[]),createTimeline:a.Func([a.Nat,l],[p],[]),getOwnedProjectList:a.Func([a.Text,q],[r],["query"]),getProjectByKeyword:a.Func([a.Text,a.Text],[k],["query"]),getProjectDetail:a.Func([a.Nat],[k],["query"]),getProjectHistory:a.Func([a.Nat],[x],["query"]),getProjectTeam:a.Func([a.Nat],[y],["query"]),getProjectTimelines:a.Func([a.Nat],[z],["query"]),getTimelineDetail:a.Func([a.Nat],[p],["query"]),getTimelineHistory:a.Func([a.Nat],[x],["query"]),healthCheck:a.Func([],[a.Record({lastBlockHash:a.Text,totalTimelines:a.Nat,totalProjects:a.Nat,totalBlocks:a.Nat,chainIntegrity:a.Bool})],["query"]),saveLlmProjectTimelines:a.Func([a.Principal,e,a.Vec(l)],[B],[]),updateProjectReward:a.Func([a.Nat,a.Nat],[k],[]),updateProjectStatus:a.Func([a.Nat,g],[k],[]),updateTimeline:a.Func([a.Nat,l],[p],[])})},g=({IDL:a})=>{let b=a.Record({review:a.Text,taskId:a.Nat}),c=a.Nat,d=a.Principal,e=a.Variant({fix:a.Record({fixedBy:d}),create:a.Null,update:a.Record({oldReview:a.Text,newReview:a.Text})}),f=a.Nat,g=a.Record({id:c,review:a.Text,action:e,fixedById:a.Opt(d),reviewerId:d,taskId:f,fixedAt:a.Opt(a.Int)}),h=a.Variant({ok:g,err:a.Text}),i=a.Variant({ui:a.Null,frontend:a.Null,business_analyst:a.Null,backend:a.Null}),j=a.Record({tag:i,title:a.Text,desc:a.Text,dueDate:a.Int,projectId:a.Nat,assignees:a.Vec(a.Principal)}),k=a.Variant({done:a.Null,in_progress:a.Null,todo:a.Null}),l=a.Variant({assigneeUpdate:a.Record({added:a.Vec(d),removed:a.Vec(d)}),metadataUpdate:a.Record({field:a.Text,oldValue:a.Text,newValue:a.Text}),create:a.Null,statusUpdate:a.Record({to:k,from:k})}),m=a.Nat,n=a.Record({id:f,tag:i,status:k,title:a.Text,action:l,doneAt:a.Opt(a.Int),desc:a.Text,createdById:d,dueDate:a.Int,projectId:m,doneById:a.Opt(d),priority:a.Bool,assignees:a.Vec(d)}),o=a.Variant({ok:n,err:a.Text}),p=a.Variant({review:g,task:n}),q=a.Record({id:a.Nat,signature:a.Text,data:p,hash:a.Text,nonce:a.Nat,timestamp:a.Int,previousHash:a.Text}),r=a.Variant({ok:a.Vec(q),err:a.Text}),s=a.Record({tag:a.Opt(a.Vec(i)),status:a.Opt(a.Vec(k)),keyword:a.Opt(a.Text)}),t=a.Variant({ok:a.Vec(n),err:a.Null}),u=a.Variant({ok:a.Vec(g),err:a.Text}),v=a.Record({userId:d,totalOverdue:a.Nat,totalDone:a.Nat,totalTask:a.Nat}),w=a.Variant({ok:a.Vec(v),err:a.Text}),x=a.Variant({ok:a.Vec(a.Text),err:a.Text});return a.Service({addReview:a.Func([b],[h],[]),createTask:a.Func([j],[o],[]),getReviewHistory:a.Func([a.Nat],[r],["query"]),getTaskByKeyword:a.Func([a.Nat,a.Text],[o],["query"]),getTaskDetail:a.Func([a.Nat],[o],["query"]),getTaskHistory:a.Func([a.Nat],[r],["query"]),getTaskList:a.Func([a.Nat,a.Opt(s)],[t],["query"]),getTaskReviews:a.Func([a.Nat],[u],["query"]),getUserOverview:a.Func([a.Nat],[w],["query"]),healthCheck:a.Func([],[a.Record({totalTasks:a.Nat,lastBlockHash:a.Text,totalBlocks:a.Nat,chainIntegrity:a.Bool,totalReviews:a.Nat})],["query"]),projectAnalysis:a.Func([a.Nat],[a.Text],["query"]),saveLlmTasks:a.Func([a.Principal,a.Nat,a.Vec(j)],[x],[]),updateReview:a.Func([a.Nat,b],[h],[]),updateReviewFixed:a.Func([a.Nat],[h],[]),updateTaskMetadata:a.Func([a.Nat,j],[o],[]),updateTaskStatus:a.Func([a.Nat,k],[o],[])})},h=({IDL:a})=>{let b=a.Variant({free:a.Null,rewarded:a.Null}),c=a.Variant({ui:a.Null,frontend:a.Null,business_analyst:a.Null,backend:a.Null}),d=a.Record({reward:a.Nat,thumbnail:a.Vec(a.Nat8),projectType:b,desc:a.Text,name:a.Text,tags:a.Vec(c)}),e=a.Record({title:a.Text,endDate:a.Int,startDate:a.Int}),f=a.Record({tag:c,title:a.Text,desc:a.Text,dueDate:a.Int,projectId:a.Nat,assignees:a.Vec(a.Principal)}),g=a.Nat,h=a.Record({projectId:a.Opt(g),message:a.Text}),i=a.Variant({ok:h,err:a.Text});return a.Service({projectPlanner:a.Func([a.Principal,d,a.Vec(e),a.Vec(f)],[i],[])})},i=({IDL:a})=>{let b=a.Principal,c=a.Record({token:a.Nat,userId:b});return a.Service({balanceOf:a.Func([a.Principal],[a.Nat],["query"]),buyIn:a.Func([a.Nat],[a.Nat],[]),name:a.Func([],[a.Text],["query"]),symbol:a.Func([],[a.Text],["query"]),teamPayout:a.Func([a.Vec(c)],[a.Bool],[]),updateBalance:a.Func([a.Principal,a.Nat],[],[])})},j=process.env.CANISTER_ID_TOKEN,k=({IDL:a})=>{let b=a.Vec(a.Nat8),c=a.Record({owner:a.Principal,subaccount:a.Opt(b)}),d=a.Record({icrc2:a.Bool}),e=a.Record({icrc1_minting_account:a.Opt(c),feature_flags:a.Opt(d)}),f=a.Record({e8s:a.Nat64}),g=a.Text,h=a.Record({secs:a.Nat64,nanos:a.Nat32}),i=a.Record({num_blocks_to_archive:a.Nat64,max_transactions_per_response:a.Opt(a.Nat64),trigger_threshold:a.Nat64,more_controller_ids:a.Opt(a.Vec(a.Principal)),max_message_size_bytes:a.Opt(a.Nat64),cycles_for_archive_creation:a.Opt(a.Nat64),node_max_memory_size_bytes:a.Opt(a.Nat64),controller_id:a.Principal}),j=a.Record({send_whitelist:a.Vec(a.Principal),token_symbol:a.Opt(a.Text),transfer_fee:a.Opt(f),minting_account:g,transaction_window:a.Opt(h),max_message_size_bytes:a.Opt(a.Nat64),icrc1_minting_account:a.Opt(c),archive_options:a.Opt(i),initial_values:a.Vec(a.Tuple(g,f)),token_name:a.Opt(a.Text),feature_flags:a.Opt(d)});a.Variant({Upgrade:a.Opt(e),Init:j});let k=a.Vec(a.Nat8),l=a.Record({account:k}),m=a.Record({account:g}),n=a.Record({canister_id:a.Principal}),o=a.Record({archives:a.Vec(n)}),p=a.Record({prev_spender_id:a.Opt(g),from_account_id:g,take:a.Opt(a.Nat64)}),q=a.Vec(a.Record({from_account_id:g,to_spender_id:g,allowance:f,expires_at:a.Opt(a.Nat64)})),r=a.Nat,s=a.Variant({Int:a.Int,Nat:a.Nat,Blob:a.Vec(a.Nat8),Text:a.Text}),t=a.Nat64,u=a.Record({to:c,fee:a.Opt(r),memo:a.Opt(a.Vec(a.Nat8)),from_subaccount:a.Opt(b),created_at_time:a.Opt(t),amount:r}),v=a.Nat,w=a.Variant({GenericError:a.Record({message:a.Text,error_code:a.Nat}),TemporarilyUnavailable:a.Null,BadBurn:a.Record({min_burn_amount:r}),Duplicate:a.Record({duplicate_of:v}),BadFee:a.Record({expected_fee:r}),CreatedInFuture:a.Record({ledger_time:a.Nat64}),TooOld:a.Null,InsufficientFunds:a.Record({balance:r})}),x=a.Variant({Ok:v,Err:w}),y=a.Record({utc_offset_minutes:a.Opt(a.Int16),language:a.Text}),z=a.Record({metadata:y,device_spec:a.Opt(a.Variant({GenericDisplay:a.Null,FieldsDisplay:a.Null}))}),A=a.Record({arg:a.Vec(a.Nat8),method:a.Text,user_preferences:z}),B=a.Variant({Text:a.Record({content:a.Text}),TokenAmount:a.Record({decimals:a.Nat8,amount:a.Nat64,symbol:a.Text}),TimestampSeconds:a.Record({amount:a.Nat64}),DurationSeconds:a.Record({amount:a.Nat64})}),C=a.Record({fields:a.Vec(a.Tuple(a.Text,B)),intent:a.Text}),D=a.Variant({FieldsDisplayMessage:C,GenericDisplayMessage:a.Text}),E=a.Record({metadata:y,consent_message:D}),F=a.Record({description:a.Text}),G=a.Variant({GenericError:a.Record({description:a.Text,error_code:a.Nat}),InsufficientPayment:F,UnsupportedCanisterCall:F,ConsentMessageUnavailable:F}),H=a.Variant({Ok:E,Err:G}),I=a.Record({account:c,spender:c}),J=a.Record({allowance:r,expires_at:a.Opt(t)}),K=a.Record({fee:a.Opt(r),memo:a.Opt(a.Vec(a.Nat8)),from_subaccount:a.Opt(b),created_at_time:a.Opt(t),amount:r,expected_allowance:a.Opt(r),expires_at:a.Opt(t),spender:c}),L=a.Variant({GenericError:a.Record({message:a.Text,error_code:a.Nat}),TemporarilyUnavailable:a.Null,Duplicate:a.Record({duplicate_of:v}),BadFee:a.Record({expected_fee:r}),AllowanceChanged:a.Record({current_allowance:r}),CreatedInFuture:a.Record({ledger_time:a.Nat64}),TooOld:a.Null,Expired:a.Record({ledger_time:a.Nat64}),InsufficientFunds:a.Record({balance:r})}),M=a.Variant({Ok:v,Err:L}),N=a.Record({to:c,fee:a.Opt(r),spender_subaccount:a.Opt(b),from:c,memo:a.Opt(a.Vec(a.Nat8)),created_at_time:a.Opt(t),amount:r}),O=a.Variant({GenericError:a.Record({message:a.Text,error_code:a.Nat}),TemporarilyUnavailable:a.Null,InsufficientAllowance:a.Record({allowance:r}),BadBurn:a.Record({min_burn_amount:r}),Duplicate:a.Record({duplicate_of:v}),BadFee:a.Record({expected_fee:r}),CreatedInFuture:a.Record({ledger_time:t}),TooOld:a.Null,InsufficientFunds:a.Record({balance:r})}),P=a.Variant({Ok:v,Err:O}),Q=a.Nat64,R=a.Record({start:Q,length:a.Nat64}),S=a.Nat64,T=a.Record({timestamp_nanos:a.Nat64}),U=a.Variant({Approve:a.Record({fee:f,from:k,allowance_e8s:a.Int,allowance:f,expected_allowance:a.Opt(f),expires_at:a.Opt(T),spender:k}),Burn:a.Record({from:k,amount:f,spender:a.Opt(k)}),Mint:a.Record({to:k,amount:f}),Transfer:a.Record({to:k,fee:f,from:k,amount:f,spender:a.Opt(a.Vec(a.Nat8))})}),V=a.Record({memo:S,icrc1_memo:a.Opt(a.Vec(a.Nat8)),operation:a.Opt(U),created_at_time:T}),W=a.Record({transaction:V,timestamp:T,parent_hash:a.Opt(a.Vec(a.Nat8))}),X=a.Record({blocks:a.Vec(W)}),Y=a.Variant({BadFirstBlockIndex:a.Record({requested_index:Q,first_valid_index:Q}),Other:a.Record({error_message:a.Text,error_code:a.Nat64})}),Z=a.Variant({Ok:X,Err:Y}),$=a.Func([R],[Z],["query"]),_=a.Record({callback:$,start:Q,length:a.Nat64}),aa=a.Record({certificate:a.Opt(a.Vec(a.Nat8)),blocks:a.Vec(W),chain_length:a.Nat64,first_block_index:Q,archived_blocks:a.Vec(_)}),ab=a.Record({callback:a.Func([R],[a.Variant({Ok:a.Vec(a.Vec(a.Nat8)),Err:Y})],["query"]),start:a.Nat64,length:a.Nat64}),ac=a.Record({certificate:a.Opt(a.Vec(a.Nat8)),blocks:a.Vec(a.Vec(a.Nat8)),chain_length:a.Nat64,first_block_index:a.Nat64,archived_blocks:a.Vec(ab)}),ad=a.Record({fee:a.Opt(r),from_subaccount:a.Opt(b),spender:k}),ae=a.Record({to:g,fee:f,memo:S,from_subaccount:a.Opt(b),created_at_time:a.Opt(T),amount:f}),af=a.Record({certification:a.Opt(a.Vec(a.Nat8)),tip_index:Q}),ag=a.Record({to:k,fee:f,memo:S,from_subaccount:a.Opt(b),created_at_time:a.Opt(T),amount:f}),ah=a.Variant({TxTooOld:a.Record({allowed_window_nanos:a.Nat64}),BadFee:a.Record({expected_fee:f}),TxDuplicate:a.Record({duplicate_of:Q}),TxCreatedInFuture:a.Null,InsufficientFunds:a.Record({balance:f})}),ai=a.Variant({Ok:Q,Err:ah}),aj=a.Record({}),ak=a.Record({transfer_fee:f});return a.Service({account_balance:a.Func([l],[f],["query"]),account_balance_dfx:a.Func([m],[f],["query"]),account_identifier:a.Func([c],[k],["query"]),archives:a.Func([],[o],["query"]),decimals:a.Func([],[a.Record({decimals:a.Nat32})],["query"]),get_allowances:a.Func([p],[q],["query"]),icrc10_supported_standards:a.Func([],[a.Vec(a.Record({url:a.Text,name:a.Text}))],["query"]),icrc1_balance_of:a.Func([c],[r],["query"]),icrc1_decimals:a.Func([],[a.Nat8],["query"]),icrc1_fee:a.Func([],[r],["query"]),icrc1_metadata:a.Func([],[a.Vec(a.Tuple(a.Text,s))],["query"]),icrc1_minting_account:a.Func([],[a.Opt(c)],["query"]),icrc1_name:a.Func([],[a.Text],["query"]),icrc1_supported_standards:a.Func([],[a.Vec(a.Record({url:a.Text,name:a.Text}))],["query"]),icrc1_symbol:a.Func([],[a.Text],["query"]),icrc1_total_supply:a.Func([],[r],["query"]),icrc1_transfer:a.Func([u],[x],[]),icrc21_canister_call_consent_message:a.Func([A],[H],[]),icrc2_allowance:a.Func([I],[J],["query"]),icrc2_approve:a.Func([K],[M],[]),icrc2_transfer_from:a.Func([N],[P],[]),is_ledger_ready:a.Func([],[a.Bool],["query"]),name:a.Func([],[a.Record({name:a.Text})],["query"]),query_blocks:a.Func([R],[aa],["query"]),query_encoded_blocks:a.Func([R],[ac],["query"]),remove_approval:a.Func([ad],[M],[]),send_dfx:a.Func([ae],[Q],[]),symbol:a.Func([],[a.Record({symbol:a.Text})],["query"]),tip_of_chain:a.Func([],[af],["query"]),transfer:a.Func([ag],[ai],[]),transfer_fee:a.Func([aj],[ak],["query"])})};var l=c(62005);let m=null,n=null,o={},p=async()=>{o={agentOptions:{host:"http://127.0.0.1:4943",identity:n=(m=await l.UJ.create()).getIdentity()}}},q=async()=>{m||await p()},r=async(a="user")=>{await q();var b=null;switch(a){case"user":b=((a,b={})=>{let c=b.agent||new d.qB({...b.agentOptions});return b.agent&&b.agentOptions&&console.warn("Detected both agent and agentOptions passed to createActor. Ignoring agentOptions and proceeding with the provided agent."),c.fetchRootKey().catch(a=>{console.warn("Unable to fetch root key. Check to ensure that your local replica is running"),console.error(a)}),d.Ag.createActor(e,{agent:c,canisterId:a,...b.actorOptions})})("by6od-j4aaa-aaaaa-qaadq-cai",o);break;case"project":b=((a,b={})=>{let c=b.agent||new d.qB({...b.agentOptions});return b.agent&&b.agentOptions&&console.warn("Detected both agent and agentOptions passed to createActor. Ignoring agentOptions and proceeding with the provided agent."),c.fetchRootKey().catch(a=>{console.warn("Unable to fetch root key. Check to ensure that your local replica is running"),console.error(a)}),d.Ag.createActor(f,{agent:c,canisterId:a,...b.actorOptions})})("br5f7-7uaaa-aaaaa-qaaca-cai",o);break;case"task":b=((a,b={})=>{let c=b.agent||new d.qB({...b.agentOptions});return b.agent&&b.agentOptions&&console.warn("Detected both agent and agentOptions passed to createActor. Ignoring agentOptions and proceeding with the provided agent."),c.fetchRootKey().catch(a=>{console.warn("Unable to fetch root key. Check to ensure that your local replica is running"),console.error(a)}),d.Ag.createActor(g,{agent:c,canisterId:a,...b.actorOptions})})("b77ix-eeaaa-aaaaa-qaada-cai",o);break;case"ai":b=((a,b={})=>{let c=b.agent||new d.qB({...b.agentOptions});return b.agent&&b.agentOptions&&console.warn("Detected both agent and agentOptions passed to createActor. Ignoring agentOptions and proceeding with the provided agent."),c.fetchRootKey().catch(a=>{console.warn("Unable to fetch root key. Check to ensure that your local replica is running"),console.error(a)}),d.Ag.createActor(h,{agent:c,canisterId:a,...b.actorOptions})})("bd3sg-teaaa-aaaaa-qaaba-cai",o);break;case"token":b=((a,b={})=>{let c=b.agent||new d.qB({...b.agentOptions});return b.agent&&b.agentOptions&&console.warn("Detected both agent and agentOptions passed to createActor. Ignoring agentOptions and proceeding with the provided agent."),c.fetchRootKey().catch(a=>{console.warn("Unable to fetch root key. Check to ensure that your local replica is running"),console.error(a)}),d.Ag.createActor(i,{agent:c,canisterId:a,...b.actorOptions})})(j,o);break;case"icp_ledger":b=((a,b={})=>{let c=b.agent||new d.qB({...b.agentOptions});return b.agent&&b.agentOptions&&console.warn("Detected both agent and agentOptions passed to createActor. Ignoring agentOptions and proceeding with the provided agent."),c.fetchRootKey().catch(a=>{console.warn("Unable to fetch root key. Check to ensure that your local replica is running"),console.error(a)}),d.Ag.createActor(k,{agent:c,canisterId:a,...b.actorOptions})})("ryjl3-tyaaa-aaaaa-aaaba-cai",o)}return b},s=()=>n.getPrincipal(),t=async()=>{await q();let a=await m.isAuthenticated();if(!n||!a)return"init";let b=await r(),{ok:c}=await w(b,"getUserDetail",s());return void 0!==c},u=async()=>{await q(),await m.login({identityProvider:"http://be2us-64aaa-aaaaa-qaabq-cai.localhost:4943/",onSuccess:async()=>{await r(),window.location.href="/login"}})},v=async()=>{await q(),await m.logout(),await r()},w=async(a,b,...c)=>{let d;for(let e=0;e<=3;e++)try{if(!a||"function"!=typeof a[b])throw Error(`Function ${b} not found actor`);return await a[b](...c)}catch(a){if(d=a,console.log(`Attempt ${e+1} failed call ${b}:`,a.message),3===e)break;if(a.message.includes("signature verification")||a.message.includes("certificate")||a.message.includes("Invalid certificate")||a.message.includes("network error")){m=null;let a=1e3*Math.pow(2,e);await new Promise(b=>setTimeout(b,a))}else break}throw d}},46977:(a,b,c)=>{Promise.resolve().then(c.t.bind(c,16133,23)),Promise.resolve().then(c.t.bind(c,16444,23)),Promise.resolve().then(c.t.bind(c,16042,23)),Promise.resolve().then(c.t.bind(c,49477,23)),Promise.resolve().then(c.t.bind(c,29345,23)),Promise.resolve().then(c.t.bind(c,12089,23)),Promise.resolve().then(c.t.bind(c,46577,23)),Promise.resolve().then(c.t.bind(c,31307,23)),Promise.resolve().then(c.t.bind(c,14817,23))},55192:(a,b,c)=>{"use strict";c.d(b,{Wu:()=>i,Zp:()=>g,aR:()=>h});var d=c(60687),e=c(43210),f=c(96241);let g=e.forwardRef(({className:a,...b},c)=>(0,d.jsx)("div",{ref:c,className:(0,f.cn)("shadow-3xl rounded-lg bg-white",a),...b}));g.displayName="Card";let h=e.forwardRef(({className:a,...b},c)=>(0,d.jsx)("div",{ref:c,className:(0,f.cn)("",a),...b}));h.displayName="CardHeader",e.forwardRef(({className:a,...b},c)=>(0,d.jsx)("h3",{ref:c,className:(0,f.cn)("",a),...b})).displayName="CardTitle",e.forwardRef(({className:a,...b},c)=>(0,d.jsx)("p",{ref:c,className:(0,f.cn)("",a),...b})).displayName="CardDescription";let i=e.forwardRef(({className:a,...b},c)=>(0,d.jsx)("div",{ref:c,className:(0,f.cn)("",a),...b}));i.displayName="CardContent",e.forwardRef(({className:a,...b},c)=>(0,d.jsx)("div",{ref:c,className:(0,f.cn)("",a),...b})).displayName="CardFooter"},58014:(a,b,c)=>{"use strict";c.r(b),c.d(b,{default:()=>i,metadata:()=>h});var d=c(37413);c(82704);var e=c(31012),f=c.n(e),g=c(66819);let h={title:"Kolabriq",description:"SASS Project Management By Kolabriq"};async function i({children:a}){return(0,d.jsx)("html",{lang:"en",className:"scroll-smooth light",children:(0,d.jsx)("body",{className:(0,g.cn)("text-gray bg-gray-400 text-sm/[22px] font-normal antialiased",f().className),children:a})})}},60129:(a,b,c)=>{Promise.resolve().then(c.t.bind(c,25227,23)),Promise.resolve().then(c.t.bind(c,86346,23)),Promise.resolve().then(c.t.bind(c,27924,23)),Promise.resolve().then(c.t.bind(c,40099,23)),Promise.resolve().then(c.t.bind(c,38243,23)),Promise.resolve().then(c.t.bind(c,28827,23)),Promise.resolve().then(c.t.bind(c,62763,23)),Promise.resolve().then(c.t.bind(c,97173,23)),Promise.resolve().then(c.bind(c,25587))},66819:(a,b,c)=>{"use strict";c.d(b,{cn:()=>f});var d=c(75986),e=c(8974);function f(...a){return(0,e.QP)((0,d.$)(a))}},74861:(a,b,c)=>{"use strict";c.r(b),c.d(b,{default:()=>e});var d=c(31658);let e=async a=>[{type:"image/x-icon",sizes:"503x496",url:(0,d.fillMetadataSegment)(".",await a.params,"icon.ico")+"?b2160b6f84c7876a"}]},77707:()=>{},82366:(a,b,c)=>{"use strict";c.r(b),c.d(b,{default:()=>f});var d=c(37413),e=c(53384);function f(){return(0,d.jsxs)("div",{className:"flex min-h-[calc(100vh-96px)] flex-col items-center justify-center gap-5",children:[(0,d.jsx)("div",{children:(0,d.jsx)(e.default,{src:"/images/not-found-two.svg",alt:"not-found-img",width:350,height:350})}),(0,d.jsx)("h3",{className:"text-xl font-semibold text-black",children:"Page not Found."})]})}},82704:()=>{},91833:(a,b,c)=>{Promise.resolve().then(c.t.bind(c,46533,23))},96241:(a,b,c)=>{"use strict";c.d(b,{GJ:()=>j,Jv:()=>i,LS:()=>k,Yq:()=>g,cn:()=>f,qF:()=>h});var d=c(49384),e=c(82348);function f(...a){return(0,e.QP)((0,d.$)(a))}function g(a){return new Date(1e3*Number(a)).toLocaleDateString("en-GB",{day:"2-digit",month:"short",year:"numeric"})}function h(){return new Date().toLocaleDateString("en-GB",{day:"2-digit",month:"short",year:"numeric"})}function i(a){return new Date(1e3*Number(a))<new Date}function j(a){return Math.round(1e8*a)}function k(a){return(Number(a)/1e8).toLocaleString("en-US",{maximumFractionDigits:8})}}};